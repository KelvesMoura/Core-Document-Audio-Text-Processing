{
  "name": "Part_1",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Access the binary and additional information\nconst type = $binary.data.fileExtension; \nconst name = $binary.data.fileName.split('\\.')[0];\n\nlet typeDocument;\n\nif ([\"mp3\", \"wav\"].includes(type)) {\n    typeDocument = \"audio\";\n} else {\n    typeDocument = \"\";\n} \n\n// Returns the information from the json file\nreturn [\n  {\n    json: { \n      fileExtension: type,\n      fileName : name,\n      typeDocument: typeDocument }}\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        140,
        560
      ],
      "id": "881f7f2f-6219-4b7a-a887-488091e20e3b",
      "name": "File Detalis"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ac6cad62-6057-4d73-bae2-9abd3f13b657",
                    "leftValue": "= {{ $binary.data.mimeType.split('/')[0] }}",
                    "rightValue": "application",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7bc80140-af4c-4702-9ff9-4bb551ecf838",
                    "leftValue": "= {{ $binary.data.mimeType.split('/')[0] }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6aff5f0f-5bb5-476f-95ed-6a46e1ef9c92",
                    "leftValue": "= {{ $binary.data.mimeType.split('/')[0] }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -580,
        960
      ],
      "id": "969f1af7-592c-459f-9526-5a4084c726f1",
      "name": "Selection"
    },
    {
      "parameters": {
        "content": "# **Data Storage**",
        "height": 700,
        "width": 700,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        560,
        1240
      ],
      "id": "e377ce42-3288-4ea7-9326-439eb14584dd",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# **Cloud Triggers**",
        "height": 480,
        "width": 1200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1620,
        760
      ],
      "id": "b3fd7751-d7ab-46d1-969c-fb55c3152eeb",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        920,
        1340
      ],
      "id": "2c486970-071f-420d-bca8-5e56beb265aa",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "LCGOGDlWOPaWCrzg",
          "name": "Supabase _Accodal"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "batchSize": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        840,
        1580
      ],
      "id": "8f1577e1-1634-4a94-9575-98367f295989",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "gQMvrc27kPIMz5JW",
          "name": "OpenAi Embedding"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_id",
                "value": "={{ $('Set Info').item.json.file_id }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        960,
        1580
      ],
      "id": "3b7361fd-048a-4f97-8b2e-94d8f458230f",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkOverlap": 200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        960,
        1780
      ],
      "id": "8a6e70fe-770b-4720-acf0-cde1f70926a4",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        660,
        1320
      ],
      "id": "bb9deeb4-1ec9-47b0-a45d-48590062aefb",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set Info').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -780,
        960
      ],
      "id": "d9b9cb24-36fd-4fe3-90c7-f7afc288e18c",
      "name": "Download Drive1",
      "alwaysOutputData": false,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "1vp3Tl7cKMyxk05c",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "# **Classification File**",
        "height": 660,
        "width": 960,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        480
      ],
      "id": "95720f91-0ccf-4bd9-8b2a-13878b232c8a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# **OCR**",
        "height": 300,
        "width": 440,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        1220
      ],
      "id": "faba329a-911b-4dcb-9d7b-aaa269e6f3b9",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "en",
          "temperature": 0.8
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -200,
        1680
      ],
      "id": "3d6da735-bf35-4440-977c-dad3f8b8d2c1",
      "name": "Transcribe Audio",
      "credentials": {
        "openAiApi": {
          "id": "6X1icQlQp04KjvDl",
          "name": "OpenAi Audio"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Parse the information in you output your answers in this format:\n\nINVOICE_RECEIPT_DATE: {{ invoiceDate }}\nINVOICE_RECEIPT_ID: {{ invoiceID }}\nVENDOR_NAME: {{ vendorName }}\nADDRESS: {{ address }}\nCITY: {{ city }}\nSTATE: {{ state }}\nZIP_CODE: {{ zipCode }}\nNAME: {{ name }}\nTAX_PAY_ID: {{ taxID }}\nRECEIVER_ADDRESS: {{ receiverAddress }}\nRECEIVER_NAME:  {{ receiverName }}\nSSNs: {{ ssn }}\nSUBTOTAL: {{ subtotal }}\nTAX: {{ tax }}\nTOTAL: {{ total }}\nOTHER: {{ other }}\n\nEnsure that the response contains only the formatted information, without any extra text, '\\n' or explanations.\n\nInput Data: {{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -40,
        1680
      ],
      "id": "2bd2ae1e-0bb8-4a18-9840-0ab2d78330f3",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "2L6e8igmeWjUeCct",
          "name": "OpenAi Tools"
        }
      }
    },
    {
      "parameters": {
        "content": "# **Transcribe Audio**",
        "height": 340,
        "width": 640,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        1580
      ],
      "id": "5fe4ef2e-3102-4085-83f2-e041d3bfe73a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7e1e3f1d-516d-461e-807a-e2b12fad0ff9",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "4e8f6601-cb4f-4196-8d80-736056c37ffa",
              "name": "fileExtension",
              "value": "={{ $json.fileExtension }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1200,
        960
      ],
      "id": "7a73a713-4c37-4dba-93ca-5c9f1b7ef963",
      "name": "Set Info"
    },
    {
      "parameters": {
        "binaryPropertyName": "=data"
      },
      "type": "n8n-nodes-base.awsTextract",
      "typeVersion": 1,
      "position": [
        -180,
        1320
      ],
      "id": "280a7922-e3d9-497c-a190-761d0c7c7cc5",
      "name": "AWS Textract1",
      "credentials": {
        "aws": {
          "id": "H9Gns2vXFKDmXzB6",
          "name": "AWS account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        -1540,
        40
      ],
      "id": "1624c581-554a-4eee-ba3b-49ab3ec1238f",
      "name": "Error Trigger",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $json.execution.error.timestamp }}",
        "format": "custom",
        "customFormat": "HH:mm:ss - dd/MM/yyyy",
        "options": {
          "includeInputFields": false,
          "timezone": true
        }
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -1280,
        40
      ],
      "id": "c491fb53-53f1-4ad3-b031-98ac40322100",
      "name": "Date & Time"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -800,
        40
      ],
      "id": "af20ba82-4a12-4032-95d8-44e7269dbee0",
      "name": "Loop Message"
    },
    {
      "parameters": {
        "content": "# **Error Alert**",
        "height": 420,
        "width": 1560,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1600,
        -100
      ],
      "typeVersion": 1,
      "id": "b020275d-7c87-4274-9cd0-9921576225c7",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "94d1331b-7e42-471b-a225-57d657cf3407",
              "name": "Workflow Name",
              "value": "={{ $('Error Trigger').item.json.workflow.name }}",
              "type": "string"
            },
            {
              "id": "b2039a63-4100-4fe7-96c9-3857824ea8c9",
              "name": "Last Node",
              "value": "={{ $('Error Trigger').item.json.execution.lastNodeExecuted }}",
              "type": "string"
            },
            {
              "id": "53dc1f0f-8e3d-470e-836d-c4fbb5dcadc3",
              "name": "Error Time",
              "value": "={{ $json.formattedDate }}",
              "type": "string"
            },
            {
              "id": "c57819b0-64bc-4be0-a52a-a37dbf49bf49",
              "name": "Error Message",
              "value": "={{ $('Error Trigger').item.json.execution.error.message }}",
              "type": "string"
            },
            {
              "id": "9dec7951-0306-4a42-8cbe-d3b55c9a1fdb",
              "name": "Stack",
              "value": "={{ $('Error Trigger').item.json.execution.error.stack }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1040,
        40
      ],
      "id": "50327165-ac9c-42e7-a00d-77a5240e4cd4",
      "name": "Set Data"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Classify this image like 'W-2', '1099' or 'Business Invoice' document. \n\nParse the information in you output your answers in this format:\n\n{{ typeDocument }}\n\nEnsure that the response contains only the formatted information, without any extra text, '\\n' or explanations.",
        "inputType": "base64",
        "simplify": "={{ fileType }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        140,
        960
      ],
      "id": "7f78e11f-4016-4dc6-b484-79ac34e57a18",
      "name": "Identify Image Model",
      "credentials": {
        "openAiApi": {
          "id": "pZ2kzQZTzQxkCf7F",
          "name": "OpenAi Image"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Classify this image like 'W-2', '1099' or 'Business Invoice' document. \n\nParse the information in you output your answers in this format:\n\n{{ typeDocument }}\n\nEnsure that the response contains only the formatted information, without any extra text, '\\n' or explanations.",
        "inputType": "base64",
        "binaryPropertyName": "data0",
        "simplify": "={{ fileType }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        320,
        780
      ],
      "id": "9e984cb7-9167-4678-b265-fc0791425949",
      "name": "Identify PDF Model",
      "credentials": {
        "openAiApi": {
          "id": "pZ2kzQZTzQxkCf7F",
          "name": "OpenAi Image"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        920,
        940
      ],
      "id": "1acadf41-5dc9-4535-8833-d2a24aa04b1a",
      "name": "Union"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1280,
        960
      ],
      "id": "a64706ba-e33d-4f47-ab71-ddf903357c42",
      "name": "Union2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "// Takes all entries\nconst fileExtension = $input.first().json.fileExtension;\nconst fileName = $input.first().json.fileName;\nconst fileId= $('Set Info').first().json.file_id;\nconst items = $input.all().map(item => item.json);\n\n// Get the first object that has `typeDocument` filled in\nconst validTypeDocument = items.find(item => item.typeDocument && item.typeDocument.trim() !== \"\")?.typeDocument || \"Unknown\";\n\nreturn [{\n  json: { \n    fileExtension: fileExtension,\n    fileName: fileName,\n    typeDocument: validTypeDocument,\n    file_Id : fileId\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1500,
        960
      ],
      "id": "93b32386-e5bd-4246-b537-5f8178e7bfe7",
      "name": "Organize"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_Id }}*",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "fileName",
              "fieldValue": "={{ $json.fileName }}"
            },
            {
              "fieldId": "fileType",
              "fieldValue": "={{ $json.fileExtension }}"
            },
            {
              "fieldId": "typeDocument",
              "fieldValue": "={{ $json.typeDocument }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1720,
        960
      ],
      "id": "9c52de99-b3c6-446a-a478-b9e6d5240ba0",
      "name": "Update",
      "credentials": {
        "supabaseApi": {
          "id": "LCGOGDlWOPaWCrzg",
          "name": "Supabase _Accodal"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtém todos os itens de entrada do fluxo\nconst allItems = $input.all().map(item => item.json);\n\n// Concatena os itens mantendo o nome das chaves e valores\nconst formattedText = allItems.map(obj => \n    Object.entries(obj).map(([key, value]) => `${key}: ${value}`).join(\"\\n\")\n).join(\"\\n\");\n\n// Retorna o JSON formatado corretamente, junto com as informações do binário\nreturn [{\n  json: { \n    content: formattedText\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        40,
        1320
      ],
      "id": "1e0171bc-12fe-4fda-b69d-aa00ffb2d279",
      "name": "Grouping"
    },
    {
      "parameters": {
        "sendTo": "kelvesm@hotmail.com",
        "subject": "=Alert - Error Project: {{ $json['Workflow Name'] }}",
        "message": "=<h3><b>Project:</b> {{ $json['Workflow Name'] }}</h3><br>\n<b>Error Time:</b> {{ $json['Error Time'] }}<br><br>\n<b>Last Node:</b> {{ $json['Last Node'] }}<br>\n<b>Error Message:</b> {{ $json['Error Message'] }}<br><br>\n<b>Logs:</b>{{ $json.Stack }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -500,
        60
      ],
      "id": "7ccd18d8-5262-43cb-b25c-9f41c5b2011a",
      "name": "Gmail1",
      "webhookId": "4da947d0-811f-4309-9a27-98fc3027922c",
      "credentials": {
        "gmailOAuth2": {
          "id": "InQyqAVJ5qyi45IE",
          "name": "Gmail account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -240,
        60
      ],
      "id": "e4c4b231-e7db-4e71-b6be-dd4c5b10382b",
      "name": "Wait 2s",
      "webhookId": "cdb42ad8-64e3-42fc-93ee-db294cf93969"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 5,
              "unit": "minutes"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1dSQ9DU6UTsrbADYrVpnLgX4tiBW2hWiO",
          "mode": "list",
          "cachedResultName": "Financial Docs",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1dSQ9DU6UTsrbADYrVpnLgX4tiBW2hWiO"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -1520,
        880
      ],
      "id": "fa492177-cc14-4151-b740-a7c9eceb9535",
      "name": "Create",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "1vp3Tl7cKMyxk05c",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e7137419-4981-49c0-887d-836547ab7272",
              "name": "typeDocument",
              "value": "={{ $json.choices[0].message.content.split('\\n')[0] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        960
      ],
      "id": "6f53c3dd-680e-4940-87f5-8d8acb0ce40f",
      "name": "Type Document"
    },
    {
      "parameters": {
        "downloadAttachments": true,
        "dataPropertyAttachmentsPrefixName": "data_",
        "options": {}
      },
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2,
      "position": [
        -1520,
        2160
      ],
      "id": "f4cf8778-d6a2-4d06-8866-1c1314548800",
      "name": "Email Trigger (IMAP)",
      "credentials": {
        "imap": {
          "id": "OWl4POcZxEuos9m8",
          "name": "IMAP_Kelves Moura"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Parse the information in you output your answers in this format after you analize both input:\n\nINVOICE_RECEIPT_DATE: {{ invoiceDate }}\nINVOICE_RECEIPT_ID: {{ invoiceID }}\nVENDOR_NAME: {{ vendorName }}\nADDRESS: {{ address }}\nCITY: {{ city }}\nSTATE: {{ state }}\nZIP_CODE: {{ zipCode }}\nNAME: {{ name }}\nTAX_PAY_ID: {{ taxID }}\nRECEIVER_ADDRESS: {{ receiverAddress }}\nRECEIVER_NAME:  {{ receiverName }}\nSSNs: {{ ssn }}\nSUBTOTAL: {{ subtotal }}\nTAX: {{ tax }}\nTOTAL: {{ total }}\nOTHER: {{ other }}\n\nNAME_SENDER: {{ invoiceDate }}\nSENDER: {{ invoiceDate }}\nDATE: {{ invoiceDate }}\nSUBJECT: {{ invoiceDate }}\n\n\nEnsure that the response contains only the formatted information, without any extra text, '\\n' or explanations.\n\nInput Data: {{ $json.output1 }} and {{ $json.output2 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -20,
        2180
      ],
      "id": "4f8ae565-883f-45d6-88de-ee9cd4bc3313",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "2L6e8igmeWjUeCct",
          "name": "OpenAi Tools"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "951e2f03-e0b4-41fe-8c30-1c0ee75d3d56",
              "name": "content",
              "value": "={{ $json.message.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        360,
        2180
      ],
      "id": "4b062fe0-ff47-44e3-a1c7-dad6be600502",
      "name": "Text Input"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c0fa898d-2bee-4e52-a214-b05c40252b1d",
              "name": "content",
              "value": "={{ $json.message.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        260,
        1680
      ],
      "id": "0d982cc1-d82e-4258-aae2-a412482c6826",
      "name": "Audio Input"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://convert-pdf.kmsystem.site/api/v1/convert/pdf/img",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "multipart/form-data"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "imageFormat",
              "value": "png"
            },
            {
              "parameterType": "formBinaryData",
              "name": "fileInput",
              "inputDataFieldName": "data"
            },
            {
              "name": "colorType",
              "value": "color"
            },
            {
              "name": "dpi",
              "value": "72"
            },
            {
              "name": "singleOrMultiple",
              "value": "muliple"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -40,
        780
      ],
      "id": "0489f68f-4a3f-4e63-8926-ceef35081971",
      "name": "Convert PDF"
    },
    {
      "parameters": {
        "outputPrefix": "data"
      },
      "type": "n8n-nodes-base.compression",
      "typeVersion": 1.1,
      "position": [
        140,
        780
      ],
      "id": "c216d032-13fc-4a3a-90d9-ffc873939c72",
      "name": "Unzip"
    },
    {
      "parameters": {
        "content": "# **Email Trigger**",
        "height": 620,
        "width": 1000,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1600,
        2060
      ],
      "id": "dcb4441d-36b3-4c03-98bf-081368bc39cc",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "# **Storage Update**",
        "height": 360,
        "width": 1100,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        820
      ],
      "id": "c39cb6f4-caa2-472a-83fb-cb6be581ae08",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# **OCR**",
        "height": 300,
        "width": 440,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -340,
        2500
      ],
      "id": "4c3fc166-2eca-49f0-a2ac-2ae7a1966efa",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "binaryPropertyName": "=data_0"
      },
      "type": "n8n-nodes-base.awsTextract",
      "typeVersion": 1,
      "position": [
        -280,
        2600
      ],
      "id": "0277cbab-aa94-44d9-97d1-7572a8d2c094",
      "name": "AWS Textract",
      "credentials": {
        "aws": {
          "id": "H9Gns2vXFKDmXzB6",
          "name": "AWS account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtém todos os itens de entrada do fluxo\nconst allItems = $input.all().map(item => item.json);\n\n// Concatena os itens mantendo o nome das chaves e valores\nconst formattedText = allItems.map(obj => \n    Object.entries(obj).map(([key, value]) => `${key}: ${value}`).join(\"\\n\")\n).join(\"\\n\");\n\n// Retorna o JSON formatado corretamente, junto com as informações do binário\nreturn [{\n  json: { \n    outputimage: formattedText\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -60,
        2600
      ],
      "id": "8a1dd7e1-a6cf-4607-b0a8-8555109b70f3",
      "name": "Grouping1"
    },
    {
      "parameters": {
        "content": "# **Data Storage**",
        "height": 740,
        "width": 700,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        580,
        2060
      ],
      "id": "a570b2da-5d98-4da4-9bd1-597ab9d9ecbe",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        920,
        2200
      ],
      "id": "ab8e8a95-a222-4f4c-b562-04d9832ac10a",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "LCGOGDlWOPaWCrzg",
          "name": "Supabase _Accodal"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "batchSize": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        840,
        2440
      ],
      "id": "51ea5c68-42c9-4f69-ae57-e487def8476f",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "gQMvrc27kPIMz5JW",
          "name": "OpenAi Embedding"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_id",
                "value": "={{ $('Set Info 2').first().json.data.message.Id }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        960,
        2440
      ],
      "id": "0009c5f1-c89a-4421-818d-ab4c6e3dd8dc",
      "name": "Default Data Loader1"
    },
    {
      "parameters": {
        "chunkOverlap": 200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        960,
        2640
      ],
      "id": "06f66149-81a4-4f41-a03e-ab93dbbf905a",
      "name": "Recursive Character Text Splitter1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        660,
        2180
      ],
      "id": "b3e70593-b58c-42dd-8db5-56b43efcf567",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92dbf6fb-e9c2-43e9-8ef6-eb34c272e160",
              "leftValue": "= {{ $binary.data_0.mimeType }}",
              "rightValue": "application",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "3bb2f389-5da8-4ddd-b445-e56e6bce4b3e",
              "leftValue": "= {{ $binary.data_0.mimeType }}",
              "rightValue": "image",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1280,
        2340
      ],
      "id": "c17dbaba-d66a-4699-b579-0f1d118ca412",
      "name": "Attachment"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -780,
        2320
      ],
      "id": "fde60dcf-9452-452b-81dc-8e1758acaee2",
      "name": "Nothing"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1dSQ9DU6UTsrbADYrVpnLgX4tiBW2hWiO",
          "mode": "list",
          "cachedResultName": "Financial Docs",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1dSQ9DU6UTsrbADYrVpnLgX4tiBW2hWiO"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -1520,
        1060
      ],
      "id": "844a269c-8a33-4448-9820-d4b45523dcf0",
      "name": "Update2",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "1vp3Tl7cKMyxk05c",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -440,
        2180
      ],
      "id": "eb0510a5-1d53-45af-9ae8-28c895049688",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const inputs = $input.all();\n\n// Obtém os valores correspondentes de cada entrada do Merge\nconst name = inputs.find(item => item.json.data?.name)?.json.data.name;\nconst sender = inputs.find(item => item.json.data?.sender)?.json.data.sender;\nconst subject = inputs.find(item => item.json.data?.subject)?.json.data.subject;\nconst output1 = inputs.find(item => item.json.data?.message.content)?.json.data.message.content;\nconst output2 = inputs.find(item => item.json.outputimage)?.json.outputimage;\n\nreturn [{\n  json: { \n    output1: output1,\n    output2: output2,\n    name: name,\n    sender: sender,\n    subject: subject,\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        2180
      ],
      "id": "4dd2e400-2521-49f4-9566-d4826dadf624",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -980,
        960
      ],
      "id": "a7452fd3-9c4d-4e19-bbaf-fc3fac1d7b39",
      "name": "Delete Copy",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "LCGOGDlWOPaWCrzg",
          "name": "Supabase _Accodal"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_Id }}*",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "fileName",
              "fieldValue": "={{ $json.fileName }}"
            },
            {
              "fieldId": "fileType",
              "fieldValue": "={{ $json.fileExtension }}"
            },
            {
              "fieldId": "typeDocument",
              "fieldValue": "={{ $json.typeDocument }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2000,
        2220
      ],
      "id": "5e4eff75-80db-4c45-ba0a-7baa9c262bf2",
      "name": "Update1",
      "credentials": {
        "supabaseApi": {
          "id": "LCGOGDlWOPaWCrzg",
          "name": "Supabase _Accodal"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Access the binary and additional information\nconst type = $binary.data_0.fileExtension; \nconst name = $binary.data_0.fileName.split('\\.')[0];\n\n// Returns the information from the json file\nreturn [\n  {\n    json: { \n      fileExtension: type,\n      fileName : name }}\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        3380
      ],
      "id": "4918a872-a63d-4af6-8e7b-bbcaf0db5b01",
      "name": "File Detalis1"
    },
    {
      "parameters": {
        "content": "# **Classification Attachment**",
        "height": 660,
        "width": 1640,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -340,
        2860
      ],
      "id": "ae8e211c-0fad-48f7-af5d-99fa58dd1703",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e7137419-4981-49c0-887d-836547ab7272",
              "name": "typeDocument",
              "value": "={{ $json.choices[0].message.content.split('\\n')[0] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        2960
      ],
      "id": "c4dd74f2-2756-4e9f-9c34-992ec0c69629",
      "name": "Type Document1"
    },
    {
      "parameters": {
        "outputPrefix": "data"
      },
      "type": "n8n-nodes-base.compression",
      "typeVersion": 1.1,
      "position": [
        20,
        3160
      ],
      "id": "32242102-c9a4-4074-ba39-76893e0344f6",
      "name": "Unzip1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7bc80140-af4c-4702-9ff9-4bb551ecf838",
                    "leftValue": "= {{ $binary.data_0.mimeType }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ac6cad62-6057-4d73-bae2-9abd3f13b657",
                    "leftValue": "= {{ $binary.data_0.mimeType }}",
                    "rightValue": "application",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -780,
        2500
      ],
      "id": "31081115-888d-4d06-beac-1e93df403ba5",
      "name": "Selection1"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Classify this image like 'W-2', '1099' or 'Business Invoice' document. \n\nParse the information in you output your answers in this format:\n\n{{ typeDocument }}\n\nEnsure that the response contains only the formatted information, without any extra text, '\\n' or explanations.",
        "inputType": "base64",
        "binaryPropertyName": "data_0",
        "simplify": "={{ fileType }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -180,
        2960
      ],
      "id": "aee89db5-1c1b-4cb2-a40b-d6f08889ce57",
      "name": "Identify Image Model_Mail",
      "credentials": {
        "openAiApi": {
          "id": "pZ2kzQZTzQxkCf7F",
          "name": "OpenAi Image"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://convert-pdf.kmsystem.site/api/v1/convert/pdf/img",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "multipart/form-data"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "imageFormat",
              "value": "png"
            },
            {
              "parameterType": "formBinaryData",
              "name": "fileInput",
              "inputDataFieldName": "data_0"
            },
            {
              "name": "colorType",
              "value": "colar"
            },
            {
              "name": "dpi",
              "value": "72"
            },
            {
              "name": "singleOrMultiple",
              "value": "muliple"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -160,
        3160
      ],
      "id": "068d67c4-ccfd-4761-ba3a-7c1d1eb42497",
      "name": "Convert PDF2"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Classify this image like 'W-2', '1099' or 'Business Invoice' document. \n\nParse the information in you output your answers in this format:\n\n{{ typeDocument }}\n\nEnsure that the response contains only the formatted information, without any extra text, '\\n' or explanations.",
        "inputType": "base64",
        "binaryPropertyName": "data0",
        "simplify": "={{ fileType }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        200,
        3160
      ],
      "id": "56498de6-551f-4b44-a7dd-091c42f03835",
      "name": "Identify PDF Model Email",
      "credentials": {
        "openAiApi": {
          "id": "pZ2kzQZTzQxkCf7F",
          "name": "OpenAi Image"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1080,
        2980
      ],
      "id": "2b6610de-ba4b-49b6-b088-33ed7f87e125",
      "name": "Union1"
    },
    {
      "parameters": {
        "jsCode": "// Takes all entries\nconst fileId= $('Set Info 2').first().json.data.message.Id;\nconst items = $input.all().map(item => item.json);\n\n// Get the first object that has `typeDocument` filled in\nconst validTypeDocument = items.find(item => item.typeDocument && item.typeDocument.trim() !== \"\")?.typeDocument || \"Unknown\";\n\nconst validfileName = items.find(item => item.fileName && item.fileName.trim() !== \"\")?.fileName || \"Unknown\";\n\nconst validfileExtension = items.find(item => item.fileExtension && item.fileExtension.trim() !== \"\")?.fileExtension || \"Unknown\";\n\nreturn [{\n  json: { \n    fileExtension: validfileExtension,\n    fileName: validfileName,\n    typeDocument: validTypeDocument,\n    file_Id : fileId\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1720,
        2220
      ],
      "id": "bd1c147e-7837-4b1d-92db-ca9263de5723",
      "name": "Organize1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1440,
        2220
      ],
      "id": "527b0bd7-bf56-4a2a-a7b5-8817381a8d6e",
      "name": "Merge1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1fc8b9e7-9145-4f43-aecd-c2a0ff8e8f07",
              "name": "data.name",
              "value": "={{ $json.from.split('<')[0] }}",
              "type": "string"
            },
            {
              "id": "abb7967b-7d69-42d1-bc24-9f9118a8993d",
              "name": "data.sender",
              "value": "={{ $json.from.split('<')[1].replace('>', '') }}",
              "type": "string"
            },
            {
              "id": "c3fd3d68-95fe-457f-9efc-ccf558a2a861",
              "name": "data.subject",
              "value": "={{ $json.subject }}",
              "type": "string"
            },
            {
              "id": "4012df55-d44d-4faa-bd47-142319cb19e9",
              "name": "data.date",
              "value": "={{ $json.date }}",
              "type": "string"
            },
            {
              "id": "961894d8-5f9a-4611-8102-e4e664597b8c",
              "name": "data.message.Id",
              "value": "={{ $json.metadata['message-id'].split('<')[1].replace('>','') }}",
              "type": "string"
            },
            {
              "id": "f9b93a1d-d99b-4d2e-abf1-994a1086f64f",
              "name": "data.message.content",
              "value": "={{ $json.textPlain }}",
              "type": "string"
            },
            {
              "id": "b2fe04c6-72e1-4490-92d8-8a1aadd74ea8",
              "name": "metadata['x-ms-has-attach']",
              "value": "={{ $json.metadata['x-ms-has-attach'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -780,
        2160
      ],
      "id": "a99cd160-cbe9-468f-887d-b3f0f7591ff2",
      "name": "Set Info 2"
    },
    {
      "parameters": {
        "content": "# **Info Analyze - Email and Attachament**",
        "height": 340,
        "width": 1040,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -520,
        2060
      ],
      "id": "9149d70e-d82a-4fe7-92f7-904bfc97b325",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "# **Storage Update**",
        "height": 360,
        "width": 900,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1340,
        2060
      ],
      "id": "b67708a5-3836-4dd4-a80f-49cad7ebe3d7",
      "name": "Sticky Note14"
    }
  ],
  "pinData": {},
  "connections": {
    "File Detalis": {
      "main": [
        [
          {
            "node": "Union",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Selection": {
      "main": [
        [
          {
            "node": "Convert PDF",
            "type": "main",
            "index": 0
          },
          {
            "node": "AWS Textract1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AWS Textract1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Identify Image Model",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "main": [
        [
          {
            "node": "Union2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Drive1": {
      "main": [
        [
          {
            "node": "Selection",
            "type": "main",
            "index": 0
          },
          {
            "node": "File Detalis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Audio Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Info": {
      "main": [
        [
          {
            "node": "Delete Copy",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AWS Textract1": {
      "main": [
        [
          {
            "node": "Grouping",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "Set Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Message": {
      "main": [
        [],
        [
          {
            "node": "Gmail1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Data": {
      "main": [
        [
          {
            "node": "Loop Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identify Image Model": {
      "main": [
        [
          {
            "node": "Type Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identify PDF Model": {
      "main": [
        [
          {
            "node": "Type Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Union": {
      "main": [
        [
          {
            "node": "Union2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Union2": {
      "main": [
        [
          {
            "node": "Organize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Organize": {
      "main": [
        [
          {
            "node": "Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update": {
      "main": [
        []
      ]
    },
    "Grouping": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail1": {
      "main": [
        [
          {
            "node": "Wait 2s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2s": {
      "main": [
        [
          {
            "node": "Loop Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create": {
      "main": [
        [
          {
            "node": "Set Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Type Document": {
      "main": [
        [
          {
            "node": "Union",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "Attachment",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Info 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Text Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Input": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert PDF": {
      "main": [
        [
          {
            "node": "Unzip",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unzip": {
      "main": [
        [
          {
            "node": "Identify PDF Model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AWS Textract": {
      "main": [
        [
          {
            "node": "Grouping1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Supabase Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Input": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Attachment": {
      "main": [
        [
          {
            "node": "Nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File Detalis1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Selection1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update2": {
      "main": [
        [
          {
            "node": "Set Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Grouping1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Copy": {
      "main": [
        [
          {
            "node": "Download Drive1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unzip1": {
      "main": [
        [
          {
            "node": "Identify PDF Model Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Selection1": {
      "main": [
        [
          {
            "node": "AWS Textract",
            "type": "main",
            "index": 0
          },
          {
            "node": "Identify Image Model_Mail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AWS Textract",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert PDF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identify Image Model_Mail": {
      "main": [
        [
          {
            "node": "Type Document1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert PDF2": {
      "main": [
        [
          {
            "node": "Unzip1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identify PDF Model Email": {
      "main": [
        [
          {
            "node": "Type Document1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Type Document1": {
      "main": [
        [
          {
            "node": "Union1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Detalis1": {
      "main": [
        [
          {
            "node": "Union1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Organize1": {
      "main": [
        [
          {
            "node": "Update1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Organize1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Union1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set Info 2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6ca67630-7df7-456c-8d96-3118b3ca7791",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ac6730a2ae3fb61d87e6d070630ea7f5cf8e5e739e42ff74046d2cd1904ce61c"
  },
  "id": "PddHqlcHYhzV5XOe",
  "tags": []
}